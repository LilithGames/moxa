// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: service/api.proto

package service

import (
	cluster "github.com/LilithGames/moxa/cluster"
	master_shard "github.com/LilithGames/moxa/master_shard"
	utils "github.com/LilithGames/moxa/utils"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardStatusType int32

const (
	ShardStatusType_Unknown  ShardStatusType = 0
	ShardStatusType_Updating ShardStatusType = 1
	ShardStatusType_Ready    ShardStatusType = 2
)

// Enum value maps for ShardStatusType.
var (
	ShardStatusType_name = map[int32]string{
		0: "Unknown",
		1: "Updating",
		2: "Ready",
	}
	ShardStatusType_value = map[string]int32{
		"Unknown":  0,
		"Updating": 1,
		"Ready":    2,
	}
)

func (x ShardStatusType) Enum() *ShardStatusType {
	p := new(ShardStatusType)
	*p = x
	return p
}

func (x ShardStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_service_api_proto_enumTypes[0].Descriptor()
}

func (ShardStatusType) Type() protoreflect.EnumType {
	return &file_service_api_proto_enumTypes[0]
}

func (x ShardStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardStatusType.Descriptor instead.
func (ShardStatusType) EnumDescriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{0}
}

type StringMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value *int32 `protobuf:"varint,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *StringMessage) Reset() {
	*x = StringMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMessage) ProtoMessage() {}

func (x *StringMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMessage.ProtoReflect.Descriptor instead.
func (*StringMessage) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{0}
}

func (x *StringMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StringMessage) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type NodeHostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId       string          `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	RaftAddress      string          `protobuf:"bytes,2,opt,name=raft_address,json=raftAddress,proto3" json:"raft_address,omitempty"`
	ShardInfoList    []*ShardInfo    `protobuf:"bytes,3,rep,name=shard_info_list,json=shardInfoList,proto3" json:"shard_info_list,omitempty"`
	LogShardInfoList []*LogShardInfo `protobuf:"bytes,4,rep,name=log_shard_info_list,json=logShardInfoList,proto3" json:"log_shard_info_list,omitempty"`
}

func (x *NodeHostInfo) Reset() {
	*x = NodeHostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfo) ProtoMessage() {}

func (x *NodeHostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfo.ProtoReflect.Descriptor instead.
func (*NodeHostInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{1}
}

func (x *NodeHostInfo) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeHostInfo) GetRaftAddress() string {
	if x != nil {
		return x.RaftAddress
	}
	return ""
}

func (x *NodeHostInfo) GetShardInfoList() []*ShardInfo {
	if x != nil {
		return x.ShardInfoList
	}
	return nil
}

func (x *NodeHostInfo) GetLogShardInfoList() []*LogShardInfo {
	if x != nil {
		return x.LogShardInfoList
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeIndex  int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	NodeHostId string `protobuf:"bytes,3,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	HostName   string `protobuf:"bytes,4,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Addr       string `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
	Following  bool   `protobuf:"varint,6,opt,name=following,proto3" json:"following,omitempty"`
	Leading    bool   `protobuf:"varint,7,opt,name=leading,proto3" json:"leading,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{2}
}

func (x *NodeInfo) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeInfo) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *NodeInfo) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *NodeInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *NodeInfo) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *NodeInfo) GetLeading() bool {
	if x != nil {
		return x.Leading
	}
	return false
}

type HealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{3}
}

type HealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{4}
}

type ShardHealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardHealthzRequest) Reset() {
	*x = ShardHealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardHealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardHealthzRequest) ProtoMessage() {}

func (x *ShardHealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardHealthzRequest.ProtoReflect.Descriptor instead.
func (*ShardHealthzRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{5}
}

func (x *ShardHealthzRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardHealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardHealthzResponse) Reset() {
	*x = ShardHealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardHealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardHealthzResponse) ProtoMessage() {}

func (x *ShardHealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardHealthzResponse.ProtoReflect.Descriptor instead.
func (*ShardHealthzResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{6}
}

type NodeHostInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeHostInfoRequest) Reset() {
	*x = NodeHostInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfoRequest) ProtoMessage() {}

func (x *NodeHostInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfoRequest.ProtoReflect.Descriptor instead.
func (*NodeHostInfoRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{7}
}

type NodeHostInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostInfo *NodeHostInfo `protobuf:"bytes,1,opt,name=node_host_info,json=nodeHostInfo,proto3" json:"node_host_info,omitempty"`
}

func (x *NodeHostInfoResponse) Reset() {
	*x = NodeHostInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfoResponse) ProtoMessage() {}

func (x *NodeHostInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfoResponse.ProtoReflect.Descriptor instead.
func (*NodeHostInfoResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{8}
}

func (x *NodeHostInfoResponse) GetNodeHostInfo() *NodeHostInfo {
	if x != nil {
		return x.NodeHostInfo
	}
	return nil
}

type ShardNopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardNopRequest) Reset() {
	*x = ShardNopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardNopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardNopRequest) ProtoMessage() {}

func (x *ShardNopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardNopRequest.ProtoReflect.Descriptor instead.
func (*ShardNopRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{9}
}

func (x *ShardNopRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardNopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardNopResponse) Reset() {
	*x = ShardNopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardNopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardNopResponse) ProtoMessage() {}

func (x *ShardNopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardNopResponse.ProtoReflect.Descriptor instead.
func (*ShardNopResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{10}
}

type NodeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	NodeId     uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr       string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *NodeView) Reset() {
	*x = NodeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeView) ProtoMessage() {}

func (x *NodeView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeView.ProtoReflect.Descriptor instead.
func (*NodeView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{11}
}

func (x *NodeView) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeView) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeView) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type ShardSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName  string      `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	ShardId    uint64      `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Initials   []*NodeView `protobuf:"bytes,3,rep,name=initials,proto3" json:"initials,omitempty"`
	Nodes      []*NodeView `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Replica    int32       `protobuf:"varint,5,opt,name=replica,proto3" json:"replica,omitempty"`
	LastNodeId uint64      `protobuf:"varint,6,opt,name=last_node_id,json=lastNodeId,proto3" json:"last_node_id,omitempty"`
}

func (x *ShardSpec) Reset() {
	*x = ShardSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardSpec) ProtoMessage() {}

func (x *ShardSpec) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardSpec.ProtoReflect.Descriptor instead.
func (*ShardSpec) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{12}
}

func (x *ShardSpec) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *ShardSpec) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardSpec) GetInitials() []*NodeView {
	if x != nil {
		return x.Initials
	}
	return nil
}

func (x *ShardSpec) GetNodes() []*NodeView {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ShardSpec) GetReplica() int32 {
	if x != nil {
		return x.Replica
	}
	return 0
}

func (x *ShardSpec) GetLastNodeId() uint64 {
	if x != nil {
		return x.LastNodeId
	}
	return 0
}

type ShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId          uint64            `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId           uint64            `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Nodes            map[uint64]string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StateMachineType string            `protobuf:"bytes,4,opt,name=state_machine_type,json=stateMachineType,proto3" json:"state_machine_type,omitempty"`
	IsLeader         bool              `protobuf:"varint,5,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
	IsObserver       bool              `protobuf:"varint,6,opt,name=is_observer,json=isObserver,proto3" json:"is_observer,omitempty"`
	IsWitness        bool              `protobuf:"varint,7,opt,name=is_witness,json=isWitness,proto3" json:"is_witness,omitempty"`
	Pending          bool              `protobuf:"varint,8,opt,name=pending,proto3" json:"pending,omitempty"`
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{13}
}

func (x *ShardInfo) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardInfo) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ShardInfo) GetNodes() map[uint64]string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ShardInfo) GetStateMachineType() string {
	if x != nil {
		return x.StateMachineType
	}
	return ""
}

func (x *ShardInfo) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

func (x *ShardInfo) GetIsObserver() bool {
	if x != nil {
		return x.IsObserver
	}
	return false
}

func (x *ShardInfo) GetIsWitness() bool {
	if x != nil {
		return x.IsWitness
	}
	return false
}

func (x *ShardInfo) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

type LogShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId  uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *LogShardInfo) Reset() {
	*x = LogShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogShardInfo) ProtoMessage() {}

func (x *LogShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogShardInfo.ProtoReflect.Descriptor instead.
func (*LogShardInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{14}
}

func (x *LogShardInfo) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *LogShardInfo) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ShardAddNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId    uint64  `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr      *string `protobuf:"bytes,3,opt,name=addr,proto3,oneof" json:"addr,omitempty"`
	NodeIndex *int32  `protobuf:"varint,4,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *ShardAddNodeRequest) Reset() {
	*x = ShardAddNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardAddNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAddNodeRequest) ProtoMessage() {}

func (x *ShardAddNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAddNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardAddNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{15}
}

func (x *ShardAddNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardAddNodeRequest) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ShardAddNodeRequest) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *ShardAddNodeRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type ShardAddNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardAddNodeResponse) Reset() {
	*x = ShardAddNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardAddNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAddNodeResponse) ProtoMessage() {}

func (x *ShardAddNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAddNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardAddNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{16}
}

type ShardRemoveNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId    *uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3,oneof" json:"node_id,omitempty"`
	NodeIndex *int32  `protobuf:"varint,3,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *ShardRemoveNodeRequest) Reset() {
	*x = ShardRemoveNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardRemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardRemoveNodeRequest) ProtoMessage() {}

func (x *ShardRemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardRemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardRemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{17}
}

func (x *ShardRemoveNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardRemoveNodeRequest) GetNodeId() uint64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

func (x *ShardRemoveNodeRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type ShardRemoveNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ShardRemoveNodeResponse) Reset() {
	*x = ShardRemoveNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardRemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardRemoveNodeResponse) ProtoMessage() {}

func (x *ShardRemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardRemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardRemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{18}
}

func (x *ShardRemoveNodeResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ShardTransferLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId    *uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3,oneof" json:"node_id,omitempty"`
	NodeIndex *int32  `protobuf:"varint,3,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *ShardTransferLeaderRequest) Reset() {
	*x = ShardTransferLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardTransferLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardTransferLeaderRequest) ProtoMessage() {}

func (x *ShardTransferLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardTransferLeaderRequest.ProtoReflect.Descriptor instead.
func (*ShardTransferLeaderRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{19}
}

func (x *ShardTransferLeaderRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardTransferLeaderRequest) GetNodeId() uint64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

func (x *ShardTransferLeaderRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type ShardTransferLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardTransferLeaderResponse) Reset() {
	*x = ShardTransferLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardTransferLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardTransferLeaderResponse) ProtoMessage() {}

func (x *ShardTransferLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardTransferLeaderResponse.ProtoReflect.Descriptor instead.
func (*ShardTransferLeaderResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{20}
}

type ShardListNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardListNodeRequest) Reset() {
	*x = ShardListNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardListNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardListNodeRequest) ProtoMessage() {}

func (x *ShardListNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardListNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardListNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{21}
}

func (x *ShardListNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardListNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ShardListNodeResponse) Reset() {
	*x = ShardListNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardListNodeResponse) ProtoMessage() {}

func (x *ShardListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardListNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardListNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{22}
}

func (x *ShardListNodeResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CreateSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId            uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	ExportPath         *string `protobuf:"bytes,2,opt,name=export_path,json=exportPath,proto3,oneof" json:"export_path,omitempty"`
	CompactionOverhead *uint64 `protobuf:"varint,3,opt,name=compaction_overhead,json=compactionOverhead,proto3,oneof" json:"compaction_overhead,omitempty"`
}

func (x *CreateSnapshotRequest) Reset() {
	*x = CreateSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{23}
}

func (x *CreateSnapshotRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *CreateSnapshotRequest) GetExportPath() string {
	if x != nil && x.ExportPath != nil {
		return *x.ExportPath
	}
	return ""
}

func (x *CreateSnapshotRequest) GetCompactionOverhead() uint64 {
	if x != nil && x.CompactionOverhead != nil {
		return *x.CompactionOverhead
	}
	return 0
}

type CreateSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotIndex uint64 `protobuf:"varint,1,opt,name=snapshot_index,json=snapshotIndex,proto3" json:"snapshot_index,omitempty"`
}

func (x *CreateSnapshotResponse) Reset() {
	*x = CreateSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotResponse) ProtoMessage() {}

func (x *CreateSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{24}
}

func (x *CreateSnapshotResponse) GetSnapshotIndex() uint64 {
	if x != nil {
		return x.SnapshotIndex
	}
	return 0
}

type SyncAddNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId    uint64  `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr      *string `protobuf:"bytes,3,opt,name=addr,proto3,oneof" json:"addr,omitempty"`
	NodeIndex *int32  `protobuf:"varint,4,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
	Force     *bool   `protobuf:"varint,100,opt,name=force,proto3,oneof" json:"force,omitempty"`
}

func (x *SyncAddNodeRequest) Reset() {
	*x = SyncAddNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAddNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddNodeRequest) ProtoMessage() {}

func (x *SyncAddNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddNodeRequest.ProtoReflect.Descriptor instead.
func (*SyncAddNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{25}
}

func (x *SyncAddNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *SyncAddNodeRequest) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SyncAddNodeRequest) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *SyncAddNodeRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

func (x *SyncAddNodeRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type SyncAddNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *SyncAddNodeResponse) Reset() {
	*x = SyncAddNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAddNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAddNodeResponse) ProtoMessage() {}

func (x *SyncAddNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAddNodeResponse.ProtoReflect.Descriptor instead.
func (*SyncAddNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{26}
}

func (x *SyncAddNodeResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type SyncRemoveNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId    *uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3,oneof" json:"node_id,omitempty"`
	NodeIndex *int32  `protobuf:"varint,3,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
	Force     *bool   `protobuf:"varint,100,opt,name=force,proto3,oneof" json:"force,omitempty"`
}

func (x *SyncRemoveNodeRequest) Reset() {
	*x = SyncRemoveNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRemoveNodeRequest) ProtoMessage() {}

func (x *SyncRemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*SyncRemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{27}
}

func (x *SyncRemoveNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *SyncRemoveNodeRequest) GetNodeId() uint64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

func (x *SyncRemoveNodeRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

func (x *SyncRemoveNodeRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type SyncRemoveNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *SyncRemoveNodeResponse) Reset() {
	*x = SyncRemoveNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRemoveNodeResponse) ProtoMessage() {}

func (x *SyncRemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*SyncRemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{28}
}

func (x *SyncRemoveNodeResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ListMemberStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMemberStateRequest) Reset() {
	*x = ListMemberStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberStateRequest) ProtoMessage() {}

func (x *ListMemberStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberStateRequest.ProtoReflect.Descriptor instead.
func (*ListMemberStateRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{29}
}

type ListMemberStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*cluster.MemberState `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	Version uint64                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListMemberStateResponse) Reset() {
	*x = ListMemberStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMemberStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMemberStateResponse) ProtoMessage() {}

func (x *ListMemberStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMemberStateResponse.ProtoReflect.Descriptor instead.
func (*ListMemberStateResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{30}
}

func (x *ListMemberStateResponse) GetMembers() []*cluster.MemberState {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *ListMemberStateResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SubscribeMemberStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SubscribeMemberStateRequest) Reset() {
	*x = SubscribeMemberStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMemberStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMemberStateRequest) ProtoMessage() {}

func (x *SubscribeMemberStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMemberStateRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMemberStateRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{31}
}

func (x *SubscribeMemberStateRequest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SubscribeMemberStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   *cluster.MemberState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Version uint64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type    utils.SyncStateType  `protobuf:"varint,3,opt,name=type,proto3,enum=utils.SyncStateType" json:"type,omitempty"`
}

func (x *SubscribeMemberStateResponse) Reset() {
	*x = SubscribeMemberStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMemberStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMemberStateResponse) ProtoMessage() {}

func (x *SubscribeMemberStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMemberStateResponse.ProtoReflect.Descriptor instead.
func (*SubscribeMemberStateResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{32}
}

func (x *SubscribeMemberStateResponse) GetState() *cluster.MemberState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *SubscribeMemberStateResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubscribeMemberStateResponse) GetType() utils.SyncStateType {
	if x != nil {
		return x.Type
	}
	return utils.SyncStateType(0)
}

type SyncMemberStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncMemberStateRequest) Reset() {
	*x = SyncMemberStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMemberStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMemberStateRequest) ProtoMessage() {}

func (x *SyncMemberStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMemberStateRequest.ProtoReflect.Descriptor instead.
func (*SyncMemberStateRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{33}
}

type SyncMemberStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   *cluster.MemberState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Version uint64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Type    utils.SyncStateType  `protobuf:"varint,3,opt,name=type,proto3,enum=utils.SyncStateType" json:"type,omitempty"`
}

func (x *SyncMemberStateResponse) Reset() {
	*x = SyncMemberStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMemberStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMemberStateResponse) ProtoMessage() {}

func (x *SyncMemberStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMemberStateResponse.ProtoReflect.Descriptor instead.
func (*SyncMemberStateResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{34}
}

func (x *SyncMemberStateResponse) GetState() *cluster.MemberState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *SyncMemberStateResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SyncMemberStateResponse) GetType() utils.SyncStateType {
	if x != nil {
		return x.Type
	}
	return utils.SyncStateType(0)
}

type AddShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName   string            `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	ProfileName string            `protobuf:"bytes,2,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Replica     *int32            `protobuf:"varint,3,opt,name=replica,proto3,oneof" json:"replica,omitempty"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddShardSpecRequest) Reset() {
	*x = AddShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShardSpecRequest) ProtoMessage() {}

func (x *AddShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShardSpecRequest.ProtoReflect.Descriptor instead.
func (*AddShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{35}
}

func (x *AddShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *AddShardSpecRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *AddShardSpecRequest) GetReplica() int32 {
	if x != nil && x.Replica != nil {
		return *x.Replica
	}
	return 0
}

func (x *AddShardSpecRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type AddShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard *ShardSpec `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *AddShardSpecResponse) Reset() {
	*x = AddShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShardSpecResponse) ProtoMessage() {}

func (x *AddShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShardSpecResponse.ProtoReflect.Descriptor instead.
func (*AddShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{36}
}

func (x *AddShardSpecResponse) GetShard() *ShardSpec {
	if x != nil {
		return x.Shard
	}
	return nil
}

type RemoveShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
}

func (x *RemoveShardSpecRequest) Reset() {
	*x = RemoveShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveShardSpecRequest) ProtoMessage() {}

func (x *RemoveShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveShardSpecRequest.ProtoReflect.Descriptor instead.
func (*RemoveShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{37}
}

func (x *RemoveShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type RemoveShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *RemoveShardSpecResponse) Reset() {
	*x = RemoveShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveShardSpecResponse) ProtoMessage() {}

func (x *RemoveShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveShardSpecResponse.ProtoReflect.Descriptor instead.
func (*RemoveShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{38}
}

func (x *RemoveShardSpecResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type RebalanceShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	Replica   *int32 `protobuf:"varint,2,opt,name=replica,proto3,oneof" json:"replica,omitempty"`
}

func (x *RebalanceShardSpecRequest) Reset() {
	*x = RebalanceShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceShardSpecRequest) ProtoMessage() {}

func (x *RebalanceShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceShardSpecRequest.ProtoReflect.Descriptor instead.
func (*RebalanceShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{39}
}

func (x *RebalanceShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *RebalanceShardSpecRequest) GetReplica() int32 {
	if x != nil && x.Replica != nil {
		return *x.Replica
	}
	return 0
}

type RebalanceShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *RebalanceShardSpecResponse) Reset() {
	*x = RebalanceShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceShardSpecResponse) ProtoMessage() {}

func (x *RebalanceShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceShardSpecResponse.ProtoReflect.Descriptor instead.
func (*RebalanceShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{40}
}

func (x *RebalanceShardSpecResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ListShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListShardSpecRequest) Reset() {
	*x = ListShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardSpecRequest) ProtoMessage() {}

func (x *ListShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardSpecRequest.ProtoReflect.Descriptor instead.
func (*ListShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{41}
}

func (x *ListShardSpecRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ListShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards  []*ShardView `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	Version uint64       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListShardSpecResponse) Reset() {
	*x = ListShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardSpecResponse) ProtoMessage() {}

func (x *ListShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardSpecResponse.ProtoReflect.Descriptor instead.
func (*ListShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{42}
}

func (x *ListShardSpecResponse) GetShards() []*ShardView {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ListShardSpecResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
}

func (x *GetShardSpecRequest) Reset() {
	*x = GetShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardSpecRequest) ProtoMessage() {}

func (x *GetShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardSpecRequest.ProtoReflect.Descriptor instead.
func (*GetShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{43}
}

func (x *GetShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type ShardStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes    []*NodeStatusView    `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	LogNodes []*LogNodeStatusView `protobuf:"bytes,3,rep,name=log_nodes,json=logNodes,proto3" json:"log_nodes,omitempty"`
}

func (x *ShardStatus) Reset() {
	*x = ShardStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardStatus) ProtoMessage() {}

func (x *ShardStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardStatus.ProtoReflect.Descriptor instead.
func (*ShardStatus) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{44}
}

func (x *ShardStatus) GetNodes() []*NodeStatusView {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ShardStatus) GetLogNodes() []*LogNodeStatusView {
	if x != nil {
		return x.LogNodes
	}
	return nil
}

type NodeStatusView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId string            `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	NodeId     uint64            `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr       string            `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Nodes      map[uint64]string `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Leading    bool              `protobuf:"varint,5,opt,name=leading,proto3" json:"leading,omitempty"`
}

func (x *NodeStatusView) Reset() {
	*x = NodeStatusView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatusView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatusView) ProtoMessage() {}

func (x *NodeStatusView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatusView.ProtoReflect.Descriptor instead.
func (*NodeStatusView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{45}
}

func (x *NodeStatusView) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeStatusView) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeStatusView) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *NodeStatusView) GetNodes() map[uint64]string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodeStatusView) GetLeading() bool {
	if x != nil {
		return x.Leading
	}
	return false
}

type LogNodeStatusView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	NodeId     uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr       string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *LogNodeStatusView) Reset() {
	*x = LogNodeStatusView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogNodeStatusView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogNodeStatusView) ProtoMessage() {}

func (x *LogNodeStatusView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogNodeStatusView.ProtoReflect.Descriptor instead.
func (*LogNodeStatusView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{46}
}

func (x *LogNodeStatusView) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *LogNodeStatusView) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *LogNodeStatusView) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type ShardHealthzView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthz       bool    `protobuf:"varint,5,opt,name=healthz,proto3" json:"healthz,omitempty"`
	HealthzDetail *string `protobuf:"bytes,6,opt,name=healthz_detail,json=healthzDetail,proto3,oneof" json:"healthz_detail,omitempty"`
}

func (x *ShardHealthzView) Reset() {
	*x = ShardHealthzView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardHealthzView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardHealthzView) ProtoMessage() {}

func (x *ShardHealthzView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardHealthzView.ProtoReflect.Descriptor instead.
func (*ShardHealthzView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{47}
}

func (x *ShardHealthzView) GetHealthz() bool {
	if x != nil {
		return x.Healthz
	}
	return false
}

func (x *ShardHealthzView) GetHealthzDetail() string {
	if x != nil && x.HealthzDetail != nil {
		return *x.HealthzDetail
	}
	return ""
}

type ShardView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec       *ShardSpec        `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *ShardStatus      `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Type       ShardStatusType   `protobuf:"varint,3,opt,name=type,proto3,enum=service.ShardStatusType" json:"type,omitempty"`
	TypeDetail *string           `protobuf:"bytes,4,opt,name=type_detail,json=typeDetail,proto3,oneof" json:"type_detail,omitempty"`
	Healthz    *ShardHealthzView `protobuf:"bytes,5,opt,name=healthz,proto3" json:"healthz,omitempty"`
}

func (x *ShardView) Reset() {
	*x = ShardView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardView) ProtoMessage() {}

func (x *ShardView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardView.ProtoReflect.Descriptor instead.
func (*ShardView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{48}
}

func (x *ShardView) GetSpec() *ShardSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ShardView) GetStatus() *ShardStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ShardView) GetType() ShardStatusType {
	if x != nil {
		return x.Type
	}
	return ShardStatusType_Unknown
}

func (x *ShardView) GetTypeDetail() string {
	if x != nil && x.TypeDetail != nil {
		return *x.TypeDetail
	}
	return ""
}

func (x *ShardView) GetHealthz() *ShardHealthzView {
	if x != nil {
		return x.Healthz
	}
	return nil
}

type GetShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard *ShardView `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *GetShardSpecResponse) Reset() {
	*x = GetShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardSpecResponse) ProtoMessage() {}

func (x *GetShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardSpecResponse.ProtoReflect.Descriptor instead.
func (*GetShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{49}
}

func (x *GetShardSpecResponse) GetShard() *ShardView {
	if x != nil {
		return x.Shard
	}
	return nil
}

type MigrationNodeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  uint64   `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Version string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Nodes   []uint64 `protobuf:"varint,3,rep,packed,name=nodes,proto3" json:"nodes,omitempty"`
	Epoch   uint64   `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *MigrationNodeView) Reset() {
	*x = MigrationNodeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationNodeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationNodeView) ProtoMessage() {}

func (x *MigrationNodeView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationNodeView.ProtoReflect.Descriptor instead.
func (*MigrationNodeView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{50}
}

func (x *MigrationNodeView) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *MigrationNodeView) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MigrationNodeView) GetNodes() []uint64 {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *MigrationNodeView) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type MigrationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId      uint64                        `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Type         string                        `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Version      string                        `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Epoch        uint64                        `protobuf:"varint,4,opt,name=Epoch,proto3" json:"Epoch,omitempty"`
	NodeUpgraded map[uint64]*MigrationNodeView `protobuf:"bytes,5,rep,name=node_upgraded,json=nodeUpgraded,proto3" json:"node_upgraded,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NodeSaved    map[uint64]*MigrationNodeView `protobuf:"bytes,6,rep,name=node_saved,json=nodeSaved,proto3" json:"node_saved,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StateIndex   uint64                        `protobuf:"varint,7,opt,name=state_index,json=stateIndex,proto3" json:"state_index,omitempty"`
}

func (x *MigrationState) Reset() {
	*x = MigrationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationState) ProtoMessage() {}

func (x *MigrationState) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationState.ProtoReflect.Descriptor instead.
func (*MigrationState) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{51}
}

func (x *MigrationState) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *MigrationState) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MigrationState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MigrationState) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *MigrationState) GetNodeUpgraded() map[uint64]*MigrationNodeView {
	if x != nil {
		return x.NodeUpgraded
	}
	return nil
}

func (x *MigrationState) GetNodeSaved() map[uint64]*MigrationNodeView {
	if x != nil {
		return x.NodeSaved
	}
	return nil
}

func (x *MigrationState) GetStateIndex() uint64 {
	if x != nil {
		return x.StateIndex
	}
	return 0
}

type MigrationStateError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *MigrationStateError) Reset() {
	*x = MigrationStateError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationStateError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationStateError) ProtoMessage() {}

func (x *MigrationStateError) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationStateError.ProtoReflect.Descriptor instead.
func (*MigrationStateError) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{52}
}

func (x *MigrationStateError) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *MigrationStateError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type MigrationStateListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*MigrationStateListItem_Data
	//	*MigrationStateListItem_Err
	Item isMigrationStateListItem_Item `protobuf_oneof:"item"`
}

func (x *MigrationStateListItem) Reset() {
	*x = MigrationStateListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationStateListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationStateListItem) ProtoMessage() {}

func (x *MigrationStateListItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationStateListItem.ProtoReflect.Descriptor instead.
func (*MigrationStateListItem) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{53}
}

func (m *MigrationStateListItem) GetItem() isMigrationStateListItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *MigrationStateListItem) GetData() *MigrationState {
	if x, ok := x.GetItem().(*MigrationStateListItem_Data); ok {
		return x.Data
	}
	return nil
}

func (x *MigrationStateListItem) GetErr() *MigrationStateError {
	if x, ok := x.GetItem().(*MigrationStateListItem_Err); ok {
		return x.Err
	}
	return nil
}

type isMigrationStateListItem_Item interface {
	isMigrationStateListItem_Item()
}

type MigrationStateListItem_Data struct {
	Data *MigrationState `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type MigrationStateListItem_Err struct {
	Err *MigrationStateError `protobuf:"bytes,2,opt,name=err,proto3,oneof"`
}

func (*MigrationStateListItem_Data) isMigrationStateListItem_Item() {}

func (*MigrationStateListItem_Err) isMigrationStateListItem_Item() {}

type CreateMigrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *CreateMigrationRequest) Reset() {
	*x = CreateMigrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMigrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMigrationRequest) ProtoMessage() {}

func (x *CreateMigrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMigrationRequest.ProtoReflect.Descriptor instead.
func (*CreateMigrationRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{54}
}

func (x *CreateMigrationRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type CreateMigrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMigrationResponse) Reset() {
	*x = CreateMigrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMigrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMigrationResponse) ProtoMessage() {}

func (x *CreateMigrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMigrationResponse.ProtoReflect.Descriptor instead.
func (*CreateMigrationResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{55}
}

type QueryMigrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *QueryMigrationRequest) Reset() {
	*x = QueryMigrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMigrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMigrationRequest) ProtoMessage() {}

func (x *QueryMigrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMigrationRequest.ProtoReflect.Descriptor instead.
func (*QueryMigrationRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{56}
}

func (x *QueryMigrationRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type QueryMigrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *MigrationState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *QueryMigrationResponse) Reset() {
	*x = QueryMigrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMigrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMigrationResponse) ProtoMessage() {}

func (x *QueryMigrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMigrationResponse.ProtoReflect.Descriptor instead.
func (*QueryMigrationResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{57}
}

func (x *QueryMigrationResponse) GetState() *MigrationState {
	if x != nil {
		return x.State
	}
	return nil
}

type DeleteMigrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *DeleteMigrationRequest) Reset() {
	*x = DeleteMigrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMigrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMigrationRequest) ProtoMessage() {}

func (x *DeleteMigrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMigrationRequest.ProtoReflect.Descriptor instead.
func (*DeleteMigrationRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteMigrationRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type DeleteMigrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMigrationResponse) Reset() {
	*x = DeleteMigrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMigrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMigrationResponse) ProtoMessage() {}

func (x *DeleteMigrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMigrationResponse.ProtoReflect.Descriptor instead.
func (*DeleteMigrationResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{59}
}

type ListMigrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMigrationRequest) Reset() {
	*x = ListMigrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMigrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMigrationRequest) ProtoMessage() {}

func (x *ListMigrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMigrationRequest.ProtoReflect.Descriptor instead.
func (*ListMigrationRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{60}
}

type ListMigrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Migrations []*MigrationStateListItem `protobuf:"bytes,1,rep,name=migrations,proto3" json:"migrations,omitempty"`
}

func (x *ListMigrationResponse) Reset() {
	*x = ListMigrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMigrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMigrationResponse) ProtoMessage() {}

func (x *ListMigrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMigrationResponse.ProtoReflect.Descriptor instead.
func (*ListMigrationResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{61}
}

func (x *ListMigrationResponse) GetMigrations() []*MigrationStateListItem {
	if x != nil {
		return x.Migrations
	}
	return nil
}

type UpdateNodeSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *master_shard.NodeSpec `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *UpdateNodeSpecRequest) Reset() {
	*x = UpdateNodeSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeSpecRequest) ProtoMessage() {}

func (x *UpdateNodeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeSpecRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{62}
}

func (x *UpdateNodeSpecRequest) GetNode() *master_shard.NodeSpec {
	if x != nil {
		return x.Node
	}
	return nil
}

type UpdateNodeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateNodeSpecResponse) Reset() {
	*x = UpdateNodeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeSpecResponse) ProtoMessage() {}

func (x *UpdateNodeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeSpecResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateNodeSpecResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type GetNodeSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId *string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3,oneof" json:"node_host_id,omitempty"`
	NodeIndex  *int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *GetNodeSpecRequest) Reset() {
	*x = GetNodeSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeSpecRequest) ProtoMessage() {}

func (x *GetNodeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeSpecRequest.ProtoReflect.Descriptor instead.
func (*GetNodeSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{64}
}

func (x *GetNodeSpecRequest) GetNodeHostId() string {
	if x != nil && x.NodeHostId != nil {
		return *x.NodeHostId
	}
	return ""
}

func (x *GetNodeSpecRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type GetNodeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *master_shard.NodeSpec `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNodeSpecResponse) Reset() {
	*x = GetNodeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeSpecResponse) ProtoMessage() {}

func (x *GetNodeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeSpecResponse.ProtoReflect.Descriptor instead.
func (*GetNodeSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{65}
}

func (x *GetNodeSpecResponse) GetNode() *master_shard.NodeSpec {
	if x != nil {
		return x.Node
	}
	return nil
}

type CordonNodeSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId *string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3,oneof" json:"node_host_id,omitempty"`
	NodeIndex  *int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *CordonNodeSpecRequest) Reset() {
	*x = CordonNodeSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CordonNodeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CordonNodeSpecRequest) ProtoMessage() {}

func (x *CordonNodeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CordonNodeSpecRequest.ProtoReflect.Descriptor instead.
func (*CordonNodeSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{66}
}

func (x *CordonNodeSpecRequest) GetNodeHostId() string {
	if x != nil && x.NodeHostId != nil {
		return *x.NodeHostId
	}
	return ""
}

func (x *CordonNodeSpecRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type CordonNodeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *CordonNodeSpecResponse) Reset() {
	*x = CordonNodeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CordonNodeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CordonNodeSpecResponse) ProtoMessage() {}

func (x *CordonNodeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CordonNodeSpecResponse.ProtoReflect.Descriptor instead.
func (*CordonNodeSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{67}
}

func (x *CordonNodeSpecResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type UncordonNodeSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId *string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3,oneof" json:"node_host_id,omitempty"`
	NodeIndex  *int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *UncordonNodeSpecRequest) Reset() {
	*x = UncordonNodeSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UncordonNodeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UncordonNodeSpecRequest) ProtoMessage() {}

func (x *UncordonNodeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UncordonNodeSpecRequest.ProtoReflect.Descriptor instead.
func (*UncordonNodeSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{68}
}

func (x *UncordonNodeSpecRequest) GetNodeHostId() string {
	if x != nil && x.NodeHostId != nil {
		return *x.NodeHostId
	}
	return ""
}

func (x *UncordonNodeSpecRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type UncordonNodeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UncordonNodeSpecResponse) Reset() {
	*x = UncordonNodeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UncordonNodeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UncordonNodeSpecResponse) ProtoMessage() {}

func (x *UncordonNodeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UncordonNodeSpecResponse.ProtoReflect.Descriptor instead.
func (*UncordonNodeSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{69}
}

func (x *UncordonNodeSpecResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type DrainNodeSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId *string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3,oneof" json:"node_host_id,omitempty"`
	NodeIndex  *int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3,oneof" json:"node_index,omitempty"`
}

func (x *DrainNodeSpecRequest) Reset() {
	*x = DrainNodeSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainNodeSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainNodeSpecRequest) ProtoMessage() {}

func (x *DrainNodeSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainNodeSpecRequest.ProtoReflect.Descriptor instead.
func (*DrainNodeSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{70}
}

func (x *DrainNodeSpecRequest) GetNodeHostId() string {
	if x != nil && x.NodeHostId != nil {
		return *x.NodeHostId
	}
	return ""
}

func (x *DrainNodeSpecRequest) GetNodeIndex() int32 {
	if x != nil && x.NodeIndex != nil {
		return *x.NodeIndex
	}
	return 0
}

type DrainNodeSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated uint64 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *DrainNodeSpecResponse) Reset() {
	*x = DrainNodeSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainNodeSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainNodeSpecResponse) ProtoMessage() {}

func (x *DrainNodeSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainNodeSpecResponse.ProtoReflect.Descriptor instead.
func (*DrainNodeSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{71}
}

func (x *DrainNodeSpecResponse) GetUpdated() uint64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

var File_service_api_proto protoreflect.FileDescriptor

var file_service_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x66,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x53, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x0f, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x22, 0xd9, 0x01, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x08, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xd3,
	0x02, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x57, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x42, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x33, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x1a, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x34, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x12,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65,
	0x61, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x22, 0x3f, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc2,
	0x01, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xff,
	0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x22, 0x40, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x65, 0x0a, 0x19, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x22, 0x36, 0x0a, 0x1a, 0x52, 0x65, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x2e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x5d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x0e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x20,
	0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x38, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x11, 0x4c,
	0x6f, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22,
	0x6b, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x2a, 0x0a,
	0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x7a, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x8a, 0x02, 0x0a,
	0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x7a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x7a, 0x56, 0x69, 0x65, 0x77, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x72, 0x0a, 0x11, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22,
	0xde, 0x03, 0x0a, 0x0e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x12, 0x4e, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x64, 0x12, 0x45, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x5b, 0x0a, 0x11, 0x4e, 0x6f, 0x64,
	0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x58, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x61,
	0x76, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x46, 0x0a, 0x13, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x33, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x15,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x47, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x19,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x58, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x7f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x72,
	0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x32, 0x0a,
	0x16, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x18, 0x55, 0x6e, 0x63, 0x6f,
	0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x81,
	0x01, 0x0a, 0x14, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x2a, 0x37, 0x0a, 0x0f, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x02, 0x32, 0xbd,
	0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x68,
	0x6f, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x7a, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x6e, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x5e, 0x0a, 0x08, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x70, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x70, 0x12, 0x6a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x2f, 0x61, 0x64, 0x64, 0x12, 0x76, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x71, 0x0a, 0x0b,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x12,
	0x7d, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x6e,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x80,
	0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x6c, 0x65, 0x61,
	0x64, 0x12, 0x7c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x70, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x86, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x30, 0x01, 0x12, 0x72, 0x0a, 0x0f, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x30, 0x01, 0x32, 0xe7,
	0x0b, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x71, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x7d, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x72, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x67,
	0x65, 0x74, 0x12, 0x7f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x73,
	0x70, 0x65, 0x63, 0x2f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x6c, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x73, 0x70, 0x65,
	0x63, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x6c, 0x0a, 0x0e, 0x43, 0x6f,
	0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x10, 0x55, 0x6e, 0x63, 0x6f,
	0x72, 0x64, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x75, 0x6e, 0x63, 0x6f, 0x72, 0x64, 0x6f, 0x6e, 0x12, 0x68,
	0x0a, 0x0d, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x78, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_api_proto_rawDescOnce sync.Once
	file_service_api_proto_rawDescData = file_service_api_proto_rawDesc
)

func file_service_api_proto_rawDescGZIP() []byte {
	file_service_api_proto_rawDescOnce.Do(func() {
		file_service_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_api_proto_rawDescData)
	})
	return file_service_api_proto_rawDescData
}

var file_service_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_api_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_service_api_proto_goTypes = []interface{}{
	(ShardStatusType)(0),                 // 0: service.ShardStatusType
	(*StringMessage)(nil),                // 1: service.StringMessage
	(*NodeHostInfo)(nil),                 // 2: service.NodeHostInfo
	(*NodeInfo)(nil),                     // 3: service.NodeInfo
	(*HealthzRequest)(nil),               // 4: service.HealthzRequest
	(*HealthzResponse)(nil),              // 5: service.HealthzResponse
	(*ShardHealthzRequest)(nil),          // 6: service.ShardHealthzRequest
	(*ShardHealthzResponse)(nil),         // 7: service.ShardHealthzResponse
	(*NodeHostInfoRequest)(nil),          // 8: service.NodeHostInfoRequest
	(*NodeHostInfoResponse)(nil),         // 9: service.NodeHostInfoResponse
	(*ShardNopRequest)(nil),              // 10: service.ShardNopRequest
	(*ShardNopResponse)(nil),             // 11: service.ShardNopResponse
	(*NodeView)(nil),                     // 12: service.NodeView
	(*ShardSpec)(nil),                    // 13: service.ShardSpec
	(*ShardInfo)(nil),                    // 14: service.ShardInfo
	(*LogShardInfo)(nil),                 // 15: service.LogShardInfo
	(*ShardAddNodeRequest)(nil),          // 16: service.ShardAddNodeRequest
	(*ShardAddNodeResponse)(nil),         // 17: service.ShardAddNodeResponse
	(*ShardRemoveNodeRequest)(nil),       // 18: service.ShardRemoveNodeRequest
	(*ShardRemoveNodeResponse)(nil),      // 19: service.ShardRemoveNodeResponse
	(*ShardTransferLeaderRequest)(nil),   // 20: service.ShardTransferLeaderRequest
	(*ShardTransferLeaderResponse)(nil),  // 21: service.ShardTransferLeaderResponse
	(*ShardListNodeRequest)(nil),         // 22: service.ShardListNodeRequest
	(*ShardListNodeResponse)(nil),        // 23: service.ShardListNodeResponse
	(*CreateSnapshotRequest)(nil),        // 24: service.CreateSnapshotRequest
	(*CreateSnapshotResponse)(nil),       // 25: service.CreateSnapshotResponse
	(*SyncAddNodeRequest)(nil),           // 26: service.SyncAddNodeRequest
	(*SyncAddNodeResponse)(nil),          // 27: service.SyncAddNodeResponse
	(*SyncRemoveNodeRequest)(nil),        // 28: service.SyncRemoveNodeRequest
	(*SyncRemoveNodeResponse)(nil),       // 29: service.SyncRemoveNodeResponse
	(*ListMemberStateRequest)(nil),       // 30: service.ListMemberStateRequest
	(*ListMemberStateResponse)(nil),      // 31: service.ListMemberStateResponse
	(*SubscribeMemberStateRequest)(nil),  // 32: service.SubscribeMemberStateRequest
	(*SubscribeMemberStateResponse)(nil), // 33: service.SubscribeMemberStateResponse
	(*SyncMemberStateRequest)(nil),       // 34: service.SyncMemberStateRequest
	(*SyncMemberStateResponse)(nil),      // 35: service.SyncMemberStateResponse
	(*AddShardSpecRequest)(nil),          // 36: service.AddShardSpecRequest
	(*AddShardSpecResponse)(nil),         // 37: service.AddShardSpecResponse
	(*RemoveShardSpecRequest)(nil),       // 38: service.RemoveShardSpecRequest
	(*RemoveShardSpecResponse)(nil),      // 39: service.RemoveShardSpecResponse
	(*RebalanceShardSpecRequest)(nil),    // 40: service.RebalanceShardSpecRequest
	(*RebalanceShardSpecResponse)(nil),   // 41: service.RebalanceShardSpecResponse
	(*ListShardSpecRequest)(nil),         // 42: service.ListShardSpecRequest
	(*ListShardSpecResponse)(nil),        // 43: service.ListShardSpecResponse
	(*GetShardSpecRequest)(nil),          // 44: service.GetShardSpecRequest
	(*ShardStatus)(nil),                  // 45: service.ShardStatus
	(*NodeStatusView)(nil),               // 46: service.NodeStatusView
	(*LogNodeStatusView)(nil),            // 47: service.LogNodeStatusView
	(*ShardHealthzView)(nil),             // 48: service.ShardHealthzView
	(*ShardView)(nil),                    // 49: service.ShardView
	(*GetShardSpecResponse)(nil),         // 50: service.GetShardSpecResponse
	(*MigrationNodeView)(nil),            // 51: service.MigrationNodeView
	(*MigrationState)(nil),               // 52: service.MigrationState
	(*MigrationStateError)(nil),          // 53: service.MigrationStateError
	(*MigrationStateListItem)(nil),       // 54: service.MigrationStateListItem
	(*CreateMigrationRequest)(nil),       // 55: service.CreateMigrationRequest
	(*CreateMigrationResponse)(nil),      // 56: service.CreateMigrationResponse
	(*QueryMigrationRequest)(nil),        // 57: service.QueryMigrationRequest
	(*QueryMigrationResponse)(nil),       // 58: service.QueryMigrationResponse
	(*DeleteMigrationRequest)(nil),       // 59: service.DeleteMigrationRequest
	(*DeleteMigrationResponse)(nil),      // 60: service.DeleteMigrationResponse
	(*ListMigrationRequest)(nil),         // 61: service.ListMigrationRequest
	(*ListMigrationResponse)(nil),        // 62: service.ListMigrationResponse
	(*UpdateNodeSpecRequest)(nil),        // 63: service.UpdateNodeSpecRequest
	(*UpdateNodeSpecResponse)(nil),       // 64: service.UpdateNodeSpecResponse
	(*GetNodeSpecRequest)(nil),           // 65: service.GetNodeSpecRequest
	(*GetNodeSpecResponse)(nil),          // 66: service.GetNodeSpecResponse
	(*CordonNodeSpecRequest)(nil),        // 67: service.CordonNodeSpecRequest
	(*CordonNodeSpecResponse)(nil),       // 68: service.CordonNodeSpecResponse
	(*UncordonNodeSpecRequest)(nil),      // 69: service.UncordonNodeSpecRequest
	(*UncordonNodeSpecResponse)(nil),     // 70: service.UncordonNodeSpecResponse
	(*DrainNodeSpecRequest)(nil),         // 71: service.DrainNodeSpecRequest
	(*DrainNodeSpecResponse)(nil),        // 72: service.DrainNodeSpecResponse
	nil,                                  // 73: service.ShardInfo.NodesEntry
	nil,                                  // 74: service.AddShardSpecRequest.LabelsEntry
	nil,                                  // 75: service.NodeStatusView.NodesEntry
	nil,                                  // 76: service.MigrationState.NodeUpgradedEntry
	nil,                                  // 77: service.MigrationState.NodeSavedEntry
	(*cluster.MemberState)(nil),          // 78: cluster.MemberState
	(utils.SyncStateType)(0),             // 79: utils.SyncStateType
	(*master_shard.NodeSpec)(nil),        // 80: master_shard.NodeSpec
}
var file_service_api_proto_depIdxs = []int32{
	14, // 0: service.NodeHostInfo.shard_info_list:type_name -> service.ShardInfo
	15, // 1: service.NodeHostInfo.log_shard_info_list:type_name -> service.LogShardInfo
	2,  // 2: service.NodeHostInfoResponse.node_host_info:type_name -> service.NodeHostInfo
	12, // 3: service.ShardSpec.initials:type_name -> service.NodeView
	12, // 4: service.ShardSpec.nodes:type_name -> service.NodeView
	73, // 5: service.ShardInfo.nodes:type_name -> service.ShardInfo.NodesEntry
	3,  // 6: service.ShardListNodeResponse.nodes:type_name -> service.NodeInfo
	78, // 7: service.ListMemberStateResponse.members:type_name -> cluster.MemberState
	78, // 8: service.SubscribeMemberStateResponse.state:type_name -> cluster.MemberState
	79, // 9: service.SubscribeMemberStateResponse.type:type_name -> utils.SyncStateType
	78, // 10: service.SyncMemberStateResponse.state:type_name -> cluster.MemberState
	79, // 11: service.SyncMemberStateResponse.type:type_name -> utils.SyncStateType
	74, // 12: service.AddShardSpecRequest.labels:type_name -> service.AddShardSpecRequest.LabelsEntry
	13, // 13: service.AddShardSpecResponse.shard:type_name -> service.ShardSpec
	49, // 14: service.ListShardSpecResponse.shards:type_name -> service.ShardView
	46, // 15: service.ShardStatus.nodes:type_name -> service.NodeStatusView
	47, // 16: service.ShardStatus.log_nodes:type_name -> service.LogNodeStatusView
	75, // 17: service.NodeStatusView.nodes:type_name -> service.NodeStatusView.NodesEntry
	13, // 18: service.ShardView.spec:type_name -> service.ShardSpec
	45, // 19: service.ShardView.status:type_name -> service.ShardStatus
	0,  // 20: service.ShardView.type:type_name -> service.ShardStatusType
	48, // 21: service.ShardView.healthz:type_name -> service.ShardHealthzView
	49, // 22: service.GetShardSpecResponse.shard:type_name -> service.ShardView
	76, // 23: service.MigrationState.node_upgraded:type_name -> service.MigrationState.NodeUpgradedEntry
	77, // 24: service.MigrationState.node_saved:type_name -> service.MigrationState.NodeSavedEntry
	52, // 25: service.MigrationStateListItem.data:type_name -> service.MigrationState
	53, // 26: service.MigrationStateListItem.err:type_name -> service.MigrationStateError
	52, // 27: service.QueryMigrationResponse.state:type_name -> service.MigrationState
	54, // 28: service.ListMigrationResponse.migrations:type_name -> service.MigrationStateListItem
	80, // 29: service.UpdateNodeSpecRequest.node:type_name -> master_shard.NodeSpec
	80, // 30: service.GetNodeSpecResponse.node:type_name -> master_shard.NodeSpec
	51, // 31: service.MigrationState.NodeUpgradedEntry.value:type_name -> service.MigrationNodeView
	51, // 32: service.MigrationState.NodeSavedEntry.value:type_name -> service.MigrationNodeView
	8,  // 33: service.NodeHost.Info:input_type -> service.NodeHostInfoRequest
	4,  // 34: service.NodeHost.Healthz:input_type -> service.HealthzRequest
	6,  // 35: service.NodeHost.ShardHealthz:input_type -> service.ShardHealthzRequest
	10, // 36: service.NodeHost.ShardNop:input_type -> service.ShardNopRequest
	16, // 37: service.NodeHost.AddNode:input_type -> service.ShardAddNodeRequest
	18, // 38: service.NodeHost.RemoveNode:input_type -> service.ShardRemoveNodeRequest
	26, // 39: service.NodeHost.SyncAddNode:input_type -> service.SyncAddNodeRequest
	28, // 40: service.NodeHost.SyncRemoveNode:input_type -> service.SyncRemoveNodeRequest
	22, // 41: service.NodeHost.ListNode:input_type -> service.ShardListNodeRequest
	20, // 42: service.NodeHost.TransferLeader:input_type -> service.ShardTransferLeaderRequest
	24, // 43: service.NodeHost.CreateSnapshot:input_type -> service.CreateSnapshotRequest
	30, // 44: service.NodeHost.ListMemberState:input_type -> service.ListMemberStateRequest
	32, // 45: service.NodeHost.SubscribeMemberState:input_type -> service.SubscribeMemberStateRequest
	34, // 46: service.NodeHost.SyncMemberState:input_type -> service.SyncMemberStateRequest
	36, // 47: service.Spec.AddShardSpec:input_type -> service.AddShardSpecRequest
	38, // 48: service.Spec.RemoveShardSpec:input_type -> service.RemoveShardSpecRequest
	40, // 49: service.Spec.RebalanceShardSpec:input_type -> service.RebalanceShardSpecRequest
	42, // 50: service.Spec.ListShardSpec:input_type -> service.ListShardSpecRequest
	44, // 51: service.Spec.GetShardSpec:input_type -> service.GetShardSpecRequest
	55, // 52: service.Spec.CreateMigration:input_type -> service.CreateMigrationRequest
	57, // 53: service.Spec.GetMigration:input_type -> service.QueryMigrationRequest
	61, // 54: service.Spec.ListMigration:input_type -> service.ListMigrationRequest
	63, // 55: service.Spec.UpdateNodeSpec:input_type -> service.UpdateNodeSpecRequest
	65, // 56: service.Spec.GetNodeSpec:input_type -> service.GetNodeSpecRequest
	67, // 57: service.Spec.CordonNodeSpec:input_type -> service.CordonNodeSpecRequest
	69, // 58: service.Spec.UncordonNodeSpec:input_type -> service.UncordonNodeSpecRequest
	71, // 59: service.Spec.DrainNodeSpec:input_type -> service.DrainNodeSpecRequest
	9,  // 60: service.NodeHost.Info:output_type -> service.NodeHostInfoResponse
	5,  // 61: service.NodeHost.Healthz:output_type -> service.HealthzResponse
	7,  // 62: service.NodeHost.ShardHealthz:output_type -> service.ShardHealthzResponse
	11, // 63: service.NodeHost.ShardNop:output_type -> service.ShardNopResponse
	17, // 64: service.NodeHost.AddNode:output_type -> service.ShardAddNodeResponse
	19, // 65: service.NodeHost.RemoveNode:output_type -> service.ShardRemoveNodeResponse
	27, // 66: service.NodeHost.SyncAddNode:output_type -> service.SyncAddNodeResponse
	29, // 67: service.NodeHost.SyncRemoveNode:output_type -> service.SyncRemoveNodeResponse
	23, // 68: service.NodeHost.ListNode:output_type -> service.ShardListNodeResponse
	21, // 69: service.NodeHost.TransferLeader:output_type -> service.ShardTransferLeaderResponse
	25, // 70: service.NodeHost.CreateSnapshot:output_type -> service.CreateSnapshotResponse
	31, // 71: service.NodeHost.ListMemberState:output_type -> service.ListMemberStateResponse
	33, // 72: service.NodeHost.SubscribeMemberState:output_type -> service.SubscribeMemberStateResponse
	35, // 73: service.NodeHost.SyncMemberState:output_type -> service.SyncMemberStateResponse
	37, // 74: service.Spec.AddShardSpec:output_type -> service.AddShardSpecResponse
	39, // 75: service.Spec.RemoveShardSpec:output_type -> service.RemoveShardSpecResponse
	41, // 76: service.Spec.RebalanceShardSpec:output_type -> service.RebalanceShardSpecResponse
	43, // 77: service.Spec.ListShardSpec:output_type -> service.ListShardSpecResponse
	50, // 78: service.Spec.GetShardSpec:output_type -> service.GetShardSpecResponse
	56, // 79: service.Spec.CreateMigration:output_type -> service.CreateMigrationResponse
	58, // 80: service.Spec.GetMigration:output_type -> service.QueryMigrationResponse
	62, // 81: service.Spec.ListMigration:output_type -> service.ListMigrationResponse
	64, // 82: service.Spec.UpdateNodeSpec:output_type -> service.UpdateNodeSpecResponse
	66, // 83: service.Spec.GetNodeSpec:output_type -> service.GetNodeSpecResponse
	68, // 84: service.Spec.CordonNodeSpec:output_type -> service.CordonNodeSpecResponse
	70, // 85: service.Spec.UncordonNodeSpec:output_type -> service.UncordonNodeSpecResponse
	72, // 86: service.Spec.DrainNodeSpec:output_type -> service.DrainNodeSpecResponse
	60, // [60:87] is the sub-list for method output_type
	33, // [33:60] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_service_api_proto_init() }
func file_service_api_proto_init() {
	if File_service_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardHealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardHealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardNopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardNopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardAddNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardAddNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardRemoveNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardRemoveNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardTransferLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardTransferLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardListNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardListNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAddNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAddNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRemoveNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRemoveNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMemberStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMemberStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMemberStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMemberStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMemberStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMemberStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatusView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogNodeStatusView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardHealthzView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationNodeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationStateError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationStateListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMigrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMigrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMigrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMigrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMigrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMigrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMigrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMigrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CordonNodeSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CordonNodeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UncordonNodeSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UncordonNodeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainNodeSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainNodeSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[53].OneofWrappers = []interface{}{
		(*MigrationStateListItem_Data)(nil),
		(*MigrationStateListItem_Err)(nil),
	}
	file_service_api_proto_msgTypes[64].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[68].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[70].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_service_api_proto_goTypes,
		DependencyIndexes: file_service_api_proto_depIdxs,
		EnumInfos:         file_service_api_proto_enumTypes,
		MessageInfos:      file_service_api_proto_msgTypes,
	}.Build()
	File_service_api_proto = out.File
	file_service_api_proto_rawDesc = nil
	file_service_api_proto_goTypes = nil
	file_service_api_proto_depIdxs = nil
}
