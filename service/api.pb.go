// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.2
// source: service/api.proto

package service

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StringMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value *int32 `protobuf:"varint,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *StringMessage) Reset() {
	*x = StringMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMessage) ProtoMessage() {}

func (x *StringMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMessage.ProtoReflect.Descriptor instead.
func (*StringMessage) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{0}
}

func (x *StringMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StringMessage) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type NodeHostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId    string       `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	RaftAddress   string       `protobuf:"bytes,2,opt,name=raft_address,json=raftAddress,proto3" json:"raft_address,omitempty"`
	ShardInfoList []*ShardInfo `protobuf:"bytes,3,rep,name=shard_info_list,json=shardInfoList,proto3" json:"shard_info_list,omitempty"`
}

func (x *NodeHostInfo) Reset() {
	*x = NodeHostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfo) ProtoMessage() {}

func (x *NodeHostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfo.ProtoReflect.Descriptor instead.
func (*NodeHostInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{1}
}

func (x *NodeHostInfo) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeHostInfo) GetRaftAddress() string {
	if x != nil {
		return x.RaftAddress
	}
	return ""
}

func (x *NodeHostInfo) GetShardInfoList() []*ShardInfo {
	if x != nil {
		return x.ShardInfoList
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeIndex  int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	NodeHostId string `protobuf:"bytes,3,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	HostName   string `protobuf:"bytes,4,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Addr       string `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
	Following  bool   `protobuf:"varint,6,opt,name=following,proto3" json:"following,omitempty"`
	Leading    bool   `protobuf:"varint,7,opt,name=leading,proto3" json:"leading,omitempty"`
	Version    string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{2}
}

func (x *NodeInfo) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeInfo) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *NodeInfo) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *NodeInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *NodeInfo) GetFollowing() bool {
	if x != nil {
		return x.Following
	}
	return false
}

func (x *NodeInfo) GetLeading() bool {
	if x != nil {
		return x.Leading
	}
	return false
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type HealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzRequest) Reset() {
	*x = HealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzRequest) ProtoMessage() {}

func (x *HealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzRequest.ProtoReflect.Descriptor instead.
func (*HealthzRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{3}
}

type HealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{4}
}

type ShardHealthzRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardHealthzRequest) Reset() {
	*x = ShardHealthzRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardHealthzRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardHealthzRequest) ProtoMessage() {}

func (x *ShardHealthzRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardHealthzRequest.ProtoReflect.Descriptor instead.
func (*ShardHealthzRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{5}
}

func (x *ShardHealthzRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardHealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardHealthzResponse) Reset() {
	*x = ShardHealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardHealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardHealthzResponse) ProtoMessage() {}

func (x *ShardHealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardHealthzResponse.ProtoReflect.Descriptor instead.
func (*ShardHealthzResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{6}
}

type NodeHostInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeHostInfoRequest) Reset() {
	*x = NodeHostInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfoRequest) ProtoMessage() {}

func (x *NodeHostInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfoRequest.ProtoReflect.Descriptor instead.
func (*NodeHostInfoRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{7}
}

type NodeHostInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostInfo *NodeHostInfo `protobuf:"bytes,1,opt,name=node_host_info,json=nodeHostInfo,proto3" json:"node_host_info,omitempty"`
}

func (x *NodeHostInfoResponse) Reset() {
	*x = NodeHostInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeHostInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHostInfoResponse) ProtoMessage() {}

func (x *NodeHostInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHostInfoResponse.ProtoReflect.Descriptor instead.
func (*NodeHostInfoResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{8}
}

func (x *NodeHostInfoResponse) GetNodeHostInfo() *NodeHostInfo {
	if x != nil {
		return x.NodeHostInfo
	}
	return nil
}

type ShardNopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardNopRequest) Reset() {
	*x = ShardNopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardNopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardNopRequest) ProtoMessage() {}

func (x *ShardNopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardNopRequest.ProtoReflect.Descriptor instead.
func (*ShardNopRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{9}
}

func (x *ShardNopRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardNopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardNopResponse) Reset() {
	*x = ShardNopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardNopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardNopResponse) ProtoMessage() {}

func (x *ShardNopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardNopResponse.ProtoReflect.Descriptor instead.
func (*ShardNopResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{10}
}

type NodeView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	NodeId     uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr       string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *NodeView) Reset() {
	*x = NodeView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeView) ProtoMessage() {}

func (x *NodeView) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeView.ProtoReflect.Descriptor instead.
func (*NodeView) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{11}
}

func (x *NodeView) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *NodeView) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeView) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type ShardSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string      `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	ShardId   uint64      `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Nodes     []*NodeView `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ShardSpec) Reset() {
	*x = ShardSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardSpec) ProtoMessage() {}

func (x *ShardSpec) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardSpec.ProtoReflect.Descriptor instead.
func (*ShardSpec) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{12}
}

func (x *ShardSpec) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *ShardSpec) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardSpec) GetNodes() []*NodeView {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId          uint64            `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeId           uint64            `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Nodes            map[uint64]string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StateMachineType string            `protobuf:"bytes,4,opt,name=state_machine_type,json=stateMachineType,proto3" json:"state_machine_type,omitempty"`
	IsLeader         bool              `protobuf:"varint,5,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
	IsObserver       bool              `protobuf:"varint,6,opt,name=is_observer,json=isObserver,proto3" json:"is_observer,omitempty"`
	IsWitness        bool              `protobuf:"varint,7,opt,name=is_witness,json=isWitness,proto3" json:"is_witness,omitempty"`
	Pending          bool              `protobuf:"varint,8,opt,name=pending,proto3" json:"pending,omitempty"`
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{13}
}

func (x *ShardInfo) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardInfo) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ShardInfo) GetNodes() map[uint64]string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ShardInfo) GetStateMachineType() string {
	if x != nil {
		return x.StateMachineType
	}
	return ""
}

func (x *ShardInfo) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

func (x *ShardInfo) GetIsObserver() bool {
	if x != nil {
		return x.IsObserver
	}
	return false
}

func (x *ShardInfo) GetIsWitness() bool {
	if x != nil {
		return x.IsWitness
	}
	return false
}

func (x *ShardInfo) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

type ShardAddNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeIndex int32   `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	NodeId    *uint64 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3,oneof" json:"node_id,omitempty"`
}

func (x *ShardAddNodeRequest) Reset() {
	*x = ShardAddNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardAddNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAddNodeRequest) ProtoMessage() {}

func (x *ShardAddNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAddNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardAddNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{14}
}

func (x *ShardAddNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardAddNodeRequest) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *ShardAddNodeRequest) GetNodeId() uint64 {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return 0
}

type ShardAddNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardAddNodeResponse) Reset() {
	*x = ShardAddNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardAddNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAddNodeResponse) ProtoMessage() {}

func (x *ShardAddNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAddNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardAddNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{15}
}

type ShardRemoveNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeIndex int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
}

func (x *ShardRemoveNodeRequest) Reset() {
	*x = ShardRemoveNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardRemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardRemoveNodeRequest) ProtoMessage() {}

func (x *ShardRemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardRemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardRemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{16}
}

func (x *ShardRemoveNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardRemoveNodeRequest) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

type ShardRemoveNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *ShardRemoveNodeResponse) Reset() {
	*x = ShardRemoveNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardRemoveNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardRemoveNodeResponse) ProtoMessage() {}

func (x *ShardRemoveNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardRemoveNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardRemoveNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{17}
}

func (x *ShardRemoveNodeResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ShardTransferLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId   uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeIndex int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
}

func (x *ShardTransferLeaderRequest) Reset() {
	*x = ShardTransferLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardTransferLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardTransferLeaderRequest) ProtoMessage() {}

func (x *ShardTransferLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardTransferLeaderRequest.ProtoReflect.Descriptor instead.
func (*ShardTransferLeaderRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{18}
}

func (x *ShardTransferLeaderRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardTransferLeaderRequest) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

type ShardTransferLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShardTransferLeaderResponse) Reset() {
	*x = ShardTransferLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardTransferLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardTransferLeaderResponse) ProtoMessage() {}

func (x *ShardTransferLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardTransferLeaderResponse.ProtoReflect.Descriptor instead.
func (*ShardTransferLeaderResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{19}
}

type ShardListNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
}

func (x *ShardListNodeRequest) Reset() {
	*x = ShardListNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardListNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardListNodeRequest) ProtoMessage() {}

func (x *ShardListNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardListNodeRequest.ProtoReflect.Descriptor instead.
func (*ShardListNodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{20}
}

func (x *ShardListNodeRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ShardListNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ShardListNodeResponse) Reset() {
	*x = ShardListNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardListNodeResponse) ProtoMessage() {}

func (x *ShardListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardListNodeResponse.ProtoReflect.Descriptor instead.
func (*ShardListNodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{21}
}

func (x *ShardListNodeResponse) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RemoteSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      uint64            `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Version    string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Path       string            `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	NodeHostId string            `protobuf:"bytes,4,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	Nodes      map[uint64]string `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RemoteSnapshot) Reset() {
	*x = RemoteSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSnapshot) ProtoMessage() {}

func (x *RemoteSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSnapshot.ProtoReflect.Descriptor instead.
func (*RemoteSnapshot) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{22}
}

func (x *RemoteSnapshot) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RemoteSnapshot) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RemoteSnapshot) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RemoteSnapshot) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *RemoteSnapshot) GetNodes() map[uint64]string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CreateSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId            uint64  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Export             bool    `protobuf:"varint,2,opt,name=export,proto3" json:"export,omitempty"`
	Force              bool    `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Leader             bool    `protobuf:"varint,4,opt,name=leader,proto3" json:"leader,omitempty"`
	CompactionOverhead *uint64 `protobuf:"varint,5,opt,name=compaction_overhead,json=compactionOverhead,proto3,oneof" json:"compaction_overhead,omitempty"`
}

func (x *CreateSnapshotRequest) Reset() {
	*x = CreateSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{23}
}

func (x *CreateSnapshotRequest) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *CreateSnapshotRequest) GetExport() bool {
	if x != nil {
		return x.Export
	}
	return false
}

func (x *CreateSnapshotRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *CreateSnapshotRequest) GetLeader() bool {
	if x != nil {
		return x.Leader
	}
	return false
}

func (x *CreateSnapshotRequest) GetCompactionOverhead() uint64 {
	if x != nil && x.CompactionOverhead != nil {
		return *x.CompactionOverhead
	}
	return 0
}

type CreateSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotIndex uint64          `protobuf:"varint,2,opt,name=snapshot_index,json=snapshotIndex,proto3" json:"snapshot_index,omitempty"`
	Version       string          `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Snapshot      *RemoteSnapshot `protobuf:"bytes,4,opt,name=snapshot,proto3,oneof" json:"snapshot,omitempty"`
}

func (x *CreateSnapshotResponse) Reset() {
	*x = CreateSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotResponse) ProtoMessage() {}

func (x *CreateSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{24}
}

func (x *CreateSnapshotResponse) GetSnapshotIndex() uint64 {
	if x != nil {
		return x.SnapshotIndex
	}
	return 0
}

func (x *CreateSnapshotResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateSnapshotResponse) GetSnapshot() *RemoteSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type AddShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
}

func (x *AddShardSpecRequest) Reset() {
	*x = AddShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShardSpecRequest) ProtoMessage() {}

func (x *AddShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShardSpecRequest.ProtoReflect.Descriptor instead.
func (*AddShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{25}
}

func (x *AddShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type AddShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shard *ShardSpec `protobuf:"bytes,1,opt,name=shard,proto3" json:"shard,omitempty"`
}

func (x *AddShardSpecResponse) Reset() {
	*x = AddShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddShardSpecResponse) ProtoMessage() {}

func (x *AddShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddShardSpecResponse.ProtoReflect.Descriptor instead.
func (*AddShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{26}
}

func (x *AddShardSpecResponse) GetShard() *ShardSpec {
	if x != nil {
		return x.Shard
	}
	return nil
}

type RemoveShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
}

func (x *RemoveShardSpecRequest) Reset() {
	*x = RemoveShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveShardSpecRequest) ProtoMessage() {}

func (x *RemoveShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveShardSpecRequest.ProtoReflect.Descriptor instead.
func (*RemoveShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type RemoveShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *RemoveShardSpecResponse) Reset() {
	*x = RemoveShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveShardSpecResponse) ProtoMessage() {}

func (x *RemoveShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveShardSpecResponse.ProtoReflect.Descriptor instead.
func (*RemoveShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveShardSpecResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type RebalanceShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardName string `protobuf:"bytes,1,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
}

func (x *RebalanceShardSpecRequest) Reset() {
	*x = RebalanceShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceShardSpecRequest) ProtoMessage() {}

func (x *RebalanceShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceShardSpecRequest.ProtoReflect.Descriptor instead.
func (*RebalanceShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{29}
}

func (x *RebalanceShardSpecRequest) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

type RebalanceShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated int32 `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *RebalanceShardSpecResponse) Reset() {
	*x = RebalanceShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceShardSpecResponse) ProtoMessage() {}

func (x *RebalanceShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceShardSpecResponse.ProtoReflect.Descriptor instead.
func (*RebalanceShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{30}
}

func (x *RebalanceShardSpecResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type ListShardSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListShardSpecRequest) Reset() {
	*x = ListShardSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShardSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardSpecRequest) ProtoMessage() {}

func (x *ListShardSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardSpecRequest.ProtoReflect.Descriptor instead.
func (*ListShardSpecRequest) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{31}
}

type ListShardSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards  []*ShardSpec `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	Version uint64       `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ListShardSpecResponse) Reset() {
	*x = ListShardSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListShardSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardSpecResponse) ProtoMessage() {}

func (x *ListShardSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardSpecResponse.ProtoReflect.Descriptor instead.
func (*ListShardSpecResponse) Descriptor() ([]byte, []int) {
	return file_service_api_proto_rawDescGZIP(), []int{32}
}

func (x *ListShardSpecResponse) GetShards() []*ShardSpec {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ListShardSpecResponse) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_service_api_proto protoreflect.FileDescriptor

var file_service_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x0d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x66, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x10, 0x0a, 0x0e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x30, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x4e,
	0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x53, 0x0a, 0x14, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x0a, 0x0f, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x22, 0x6e, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x77, 0x69,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x57,
	0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x79, 0x0a, 0x13, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41, 0x64,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a,
	0x16, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x33, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x1d,
	0x0a, 0x1b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a,
	0x14, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x40, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc6, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x13, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x34, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x40, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x17,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x22, 0x3a, 0x0a, 0x19, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a,
	0x1a, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x84, 0x08, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x6f, 0x73,
	0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x7a, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x6e, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x5e, 0x0a, 0x08, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e,
	0x6f, 0x70, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12,
	0x15, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x70, 0x12, 0x77, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x41,
	0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x7b,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x12,
	0x83, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x7b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x7d, 0x2f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x6e, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x64, 0x65,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e,
	0x6f, 0x64, 0x65, 0x2f, 0x7b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x7d,
	0x2f, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x7c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x32, 0xee, 0x03, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x71, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x12, 0x1c, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x12,
	0x7d, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f,
	0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x89,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4c, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x6d,
	0x6f, 0x78, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_service_api_proto_rawDescOnce sync.Once
	file_service_api_proto_rawDescData = file_service_api_proto_rawDesc
)

func file_service_api_proto_rawDescGZIP() []byte {
	file_service_api_proto_rawDescOnce.Do(func() {
		file_service_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_api_proto_rawDescData)
	})
	return file_service_api_proto_rawDescData
}

var file_service_api_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_service_api_proto_goTypes = []interface{}{
	(*StringMessage)(nil),               // 0: service.StringMessage
	(*NodeHostInfo)(nil),                // 1: service.NodeHostInfo
	(*NodeInfo)(nil),                    // 2: service.NodeInfo
	(*HealthzRequest)(nil),              // 3: service.HealthzRequest
	(*HealthzResponse)(nil),             // 4: service.HealthzResponse
	(*ShardHealthzRequest)(nil),         // 5: service.ShardHealthzRequest
	(*ShardHealthzResponse)(nil),        // 6: service.ShardHealthzResponse
	(*NodeHostInfoRequest)(nil),         // 7: service.NodeHostInfoRequest
	(*NodeHostInfoResponse)(nil),        // 8: service.NodeHostInfoResponse
	(*ShardNopRequest)(nil),             // 9: service.ShardNopRequest
	(*ShardNopResponse)(nil),            // 10: service.ShardNopResponse
	(*NodeView)(nil),                    // 11: service.NodeView
	(*ShardSpec)(nil),                   // 12: service.ShardSpec
	(*ShardInfo)(nil),                   // 13: service.ShardInfo
	(*ShardAddNodeRequest)(nil),         // 14: service.ShardAddNodeRequest
	(*ShardAddNodeResponse)(nil),        // 15: service.ShardAddNodeResponse
	(*ShardRemoveNodeRequest)(nil),      // 16: service.ShardRemoveNodeRequest
	(*ShardRemoveNodeResponse)(nil),     // 17: service.ShardRemoveNodeResponse
	(*ShardTransferLeaderRequest)(nil),  // 18: service.ShardTransferLeaderRequest
	(*ShardTransferLeaderResponse)(nil), // 19: service.ShardTransferLeaderResponse
	(*ShardListNodeRequest)(nil),        // 20: service.ShardListNodeRequest
	(*ShardListNodeResponse)(nil),       // 21: service.ShardListNodeResponse
	(*RemoteSnapshot)(nil),              // 22: service.RemoteSnapshot
	(*CreateSnapshotRequest)(nil),       // 23: service.CreateSnapshotRequest
	(*CreateSnapshotResponse)(nil),      // 24: service.CreateSnapshotResponse
	(*AddShardSpecRequest)(nil),         // 25: service.AddShardSpecRequest
	(*AddShardSpecResponse)(nil),        // 26: service.AddShardSpecResponse
	(*RemoveShardSpecRequest)(nil),      // 27: service.RemoveShardSpecRequest
	(*RemoveShardSpecResponse)(nil),     // 28: service.RemoveShardSpecResponse
	(*RebalanceShardSpecRequest)(nil),   // 29: service.RebalanceShardSpecRequest
	(*RebalanceShardSpecResponse)(nil),  // 30: service.RebalanceShardSpecResponse
	(*ListShardSpecRequest)(nil),        // 31: service.ListShardSpecRequest
	(*ListShardSpecResponse)(nil),       // 32: service.ListShardSpecResponse
	nil,                                 // 33: service.ShardInfo.NodesEntry
	nil,                                 // 34: service.RemoteSnapshot.NodesEntry
}
var file_service_api_proto_depIdxs = []int32{
	13, // 0: service.NodeHostInfo.shard_info_list:type_name -> service.ShardInfo
	1,  // 1: service.NodeHostInfoResponse.node_host_info:type_name -> service.NodeHostInfo
	11, // 2: service.ShardSpec.nodes:type_name -> service.NodeView
	33, // 3: service.ShardInfo.nodes:type_name -> service.ShardInfo.NodesEntry
	2,  // 4: service.ShardListNodeResponse.nodes:type_name -> service.NodeInfo
	34, // 5: service.RemoteSnapshot.nodes:type_name -> service.RemoteSnapshot.NodesEntry
	22, // 6: service.CreateSnapshotResponse.snapshot:type_name -> service.RemoteSnapshot
	12, // 7: service.AddShardSpecResponse.shard:type_name -> service.ShardSpec
	12, // 8: service.ListShardSpecResponse.shards:type_name -> service.ShardSpec
	7,  // 9: service.NodeHost.Info:input_type -> service.NodeHostInfoRequest
	3,  // 10: service.NodeHost.Healthz:input_type -> service.HealthzRequest
	5,  // 11: service.NodeHost.ShardHealthz:input_type -> service.ShardHealthzRequest
	9,  // 12: service.NodeHost.ShardNop:input_type -> service.ShardNopRequest
	14, // 13: service.NodeHost.AddNode:input_type -> service.ShardAddNodeRequest
	16, // 14: service.NodeHost.RemoveNode:input_type -> service.ShardRemoveNodeRequest
	20, // 15: service.NodeHost.ListNode:input_type -> service.ShardListNodeRequest
	18, // 16: service.NodeHost.TransferLeader:input_type -> service.ShardTransferLeaderRequest
	23, // 17: service.NodeHost.CreateSnapshot:input_type -> service.CreateSnapshotRequest
	25, // 18: service.Spec.AddShardSpec:input_type -> service.AddShardSpecRequest
	27, // 19: service.Spec.RemoveShardSpec:input_type -> service.RemoveShardSpecRequest
	29, // 20: service.Spec.RebalanceShardSpec:input_type -> service.RebalanceShardSpecRequest
	31, // 21: service.Spec.ListShardSpec:input_type -> service.ListShardSpecRequest
	8,  // 22: service.NodeHost.Info:output_type -> service.NodeHostInfoResponse
	4,  // 23: service.NodeHost.Healthz:output_type -> service.HealthzResponse
	6,  // 24: service.NodeHost.ShardHealthz:output_type -> service.ShardHealthzResponse
	10, // 25: service.NodeHost.ShardNop:output_type -> service.ShardNopResponse
	15, // 26: service.NodeHost.AddNode:output_type -> service.ShardAddNodeResponse
	17, // 27: service.NodeHost.RemoveNode:output_type -> service.ShardRemoveNodeResponse
	21, // 28: service.NodeHost.ListNode:output_type -> service.ShardListNodeResponse
	19, // 29: service.NodeHost.TransferLeader:output_type -> service.ShardTransferLeaderResponse
	24, // 30: service.NodeHost.CreateSnapshot:output_type -> service.CreateSnapshotResponse
	26, // 31: service.Spec.AddShardSpec:output_type -> service.AddShardSpecResponse
	28, // 32: service.Spec.RemoveShardSpec:output_type -> service.RemoveShardSpecResponse
	30, // 33: service.Spec.RebalanceShardSpec:output_type -> service.RebalanceShardSpecResponse
	32, // 34: service.Spec.ListShardSpec:output_type -> service.ListShardSpecResponse
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_service_api_proto_init() }
func file_service_api_proto_init() {
	if File_service_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardHealthzRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardHealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeHostInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardNopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardNopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardAddNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardAddNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardRemoveNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardRemoveNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardTransferLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardTransferLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardListNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardListNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShardSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListShardSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_service_api_proto_msgTypes[24].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_service_api_proto_goTypes,
		DependencyIndexes: file_service_api_proto_depIdxs,
		MessageInfos:      file_service_api_proto_msgTypes,
	}.Build()
	File_service_api_proto = out.File
	file_service_api_proto_rawDesc = nil
	file_service_api_proto_goTypes = nil
	file_service_api_proto_depIdxs = nil
}
