// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.2
// source: master_shard/state.proto

package master_shard

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHostId string `protobuf:"bytes,1,opt,name=node_host_id,json=nodeHostId,proto3" json:"node_host_id,omitempty"`
	NodeId     uint64 `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Addr       string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_shard_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_master_shard_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_master_shard_state_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetNodeHostId() string {
	if x != nil {
		return x.NodeHostId
	}
	return ""
}

func (x *Node) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Node) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// StateMachine
type ShardSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateVersion uint64           `protobuf:"varint,1,opt,name=state_version,json=stateVersion,proto3" json:"state_version,omitempty"`
	ShardName    string           `protobuf:"bytes,2,opt,name=shard_name,json=shardName,proto3" json:"shard_name,omitempty"`
	ShardId      uint64           `protobuf:"varint,3,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Replica      int32            `protobuf:"varint,4,opt,name=replica,proto3" json:"replica,omitempty"`
	Nodes        map[string]*Node `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ShardSpec) Reset() {
	*x = ShardSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_shard_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardSpec) ProtoMessage() {}

func (x *ShardSpec) ProtoReflect() protoreflect.Message {
	mi := &file_master_shard_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardSpec.ProtoReflect.Descriptor instead.
func (*ShardSpec) Descriptor() ([]byte, []int) {
	return file_master_shard_state_proto_rawDescGZIP(), []int{1}
}

func (x *ShardSpec) GetStateVersion() uint64 {
	if x != nil {
		return x.StateVersion
	}
	return 0
}

func (x *ShardSpec) GetShardName() string {
	if x != nil {
		return x.ShardName
	}
	return ""
}

func (x *ShardSpec) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardSpec) GetReplica() int32 {
	if x != nil {
		return x.Replica
	}
	return 0
}

func (x *ShardSpec) GetNodes() map[string]*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type StateRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardsVersion uint64 `protobuf:"varint,1,opt,name=shards_version,json=shardsVersion,proto3" json:"shards_version,omitempty"`
	LastShardId   uint64 `protobuf:"varint,2,opt,name=last_shard_id,json=lastShardId,proto3" json:"last_shard_id,omitempty"`
	// spec
	// shardname-shard
	Shards map[string]*ShardSpec `protobuf:"bytes,3,rep,name=shards,proto3" json:"shards,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StateRoot) Reset() {
	*x = StateRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_shard_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRoot) ProtoMessage() {}

func (x *StateRoot) ProtoReflect() protoreflect.Message {
	mi := &file_master_shard_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRoot.ProtoReflect.Descriptor instead.
func (*StateRoot) Descriptor() ([]byte, []int) {
	return file_master_shard_state_proto_rawDescGZIP(), []int{2}
}

func (x *StateRoot) GetShardsVersion() uint64 {
	if x != nil {
		return x.ShardsVersion
	}
	return 0
}

func (x *StateRoot) GetLastShardId() uint64 {
	if x != nil {
		return x.LastShardId
	}
	return 0
}

func (x *StateRoot) GetShards() map[string]*ShardSpec {
	if x != nil {
		return x.Shards
	}
	return nil
}

var File_master_shard_state_proto protoreflect.FileDescriptor

var file_master_shard_state_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x22, 0x55, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22,
	0x8c, 0x02, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x38, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x1a, 0x4c, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe7,
	0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x73, 0x1a, 0x52, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x64, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x78, 0x61, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_master_shard_state_proto_rawDescOnce sync.Once
	file_master_shard_state_proto_rawDescData = file_master_shard_state_proto_rawDesc
)

func file_master_shard_state_proto_rawDescGZIP() []byte {
	file_master_shard_state_proto_rawDescOnce.Do(func() {
		file_master_shard_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_master_shard_state_proto_rawDescData)
	})
	return file_master_shard_state_proto_rawDescData
}

var file_master_shard_state_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_master_shard_state_proto_goTypes = []interface{}{
	(*Node)(nil),      // 0: master_shard.Node
	(*ShardSpec)(nil), // 1: master_shard.ShardSpec
	(*StateRoot)(nil), // 2: master_shard.StateRoot
	nil,               // 3: master_shard.ShardSpec.NodesEntry
	nil,               // 4: master_shard.StateRoot.ShardsEntry
}
var file_master_shard_state_proto_depIdxs = []int32{
	3, // 0: master_shard.ShardSpec.nodes:type_name -> master_shard.ShardSpec.NodesEntry
	4, // 1: master_shard.StateRoot.shards:type_name -> master_shard.StateRoot.ShardsEntry
	0, // 2: master_shard.ShardSpec.NodesEntry.value:type_name -> master_shard.Node
	1, // 3: master_shard.StateRoot.ShardsEntry.value:type_name -> master_shard.ShardSpec
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_master_shard_state_proto_init() }
func file_master_shard_state_proto_init() {
	if File_master_shard_state_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_master_shard_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_shard_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_shard_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_master_shard_state_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_master_shard_state_proto_goTypes,
		DependencyIndexes: file_master_shard_state_proto_depIdxs,
		MessageInfos:      file_master_shard_state_proto_msgTypes,
	}.Build()
	File_master_shard_state_proto = out.File
	file_master_shard_state_proto_rawDesc = nil
	file_master_shard_state_proto_goTypes = nil
	file_master_shard_state_proto_depIdxs = nil
}
